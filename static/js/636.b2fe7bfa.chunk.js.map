{"version":3,"file":"static/js/636.b2fe7bfa.chunk.js","mappings":"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","sources":["components/Contacts/Filter/Filter.styled.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactForm/ContactForm.styled.jsx","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/ContactItem/ContactItem.styled.jsx","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList .jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterTitle = styled.label`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nexport const FilterInput = styled.input`\n  margin-left: 20px;\n  height: 25px;\n  width: 20vw;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  background-color: rgba(255, 255, 255, 0.35);\n  :focus {\n    border: 1px solid #35e6d6;\n  }\n`;\n","import { FilterTitle, FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../../redux/filterSlice';\nimport { useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filterInput = event => {\n    dispatch(filterContact(event.currentTarget.value));\n  };\n\n  return (\n    <FilterTitle>\n      Search by name:\n      <FilterInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={filterInput}\n        value={filter}\n      />\n    </FilterTitle>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormBlock = styled.form`\n  display: flex;\n  gap: 5px;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 30%;\n`;\n\nexport const FormTitle = styled.label`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n  height: 25px;\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  background-color: rgba(255, 255, 255, 0.35);\n  :focus {\n    border: 1px solid #35e6d6;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 10px;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  margin: 0 auto;\n  margin-top: 15px;\n  color: #35e6d6;\n  background-color: transparent;\n  cursor: pointer;\n  :hover {\n    color: black;\n    background-color: #35e6d6;\n  }\n`;\n","import { useState } from 'react';\nimport { FormBlock, FormTitle, FormInput, FormBtn } from './ContactForm.styled';\nimport { addContact } from '../../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(state => state.contacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setPhone(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts.items.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    }\n    dispatch(addContact({ name, number:phone }));\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <FormBlock onSubmit={handleSubmit}>\n      <FormTitle>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </FormTitle>\n      <FormTitle>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={phone}\n        />\n      </FormTitle>\n      <FormBtn type=\"submit\" disabled={contacts.isLoading}>\n        Add contact\n      </FormBtn>\n    </FormBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ItemBlock = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nexport const ItemBtnEdit = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 10px;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  color: #35e6d6;\n  background-color: transparent;\n  margin-right: 5px;\n  cursor: pointer;\n  :hover {\n    color: #0400ff;\n    border-color: #0400ff;\n    background-color: #35e6d6;\n  }\n`;\n\nexport const ItemBtnDelete = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 10px;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  color: #35e6d6;\n  background-color: transparent;\n  cursor: pointer;\n  :hover {\n    color: red;\n    border-color: red;\n    background-color: #35e6d6;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ItemBlock, ItemBtnEdit, ItemBtnDelete } from './ContactItem.styled';\nimport { useSelector } from 'react-redux';\n\nexport const ContactItem = ({ contactItem, onClick }) => {\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  return (\n    <ItemBlock>\n      {contactItem.name}: {contactItem.number}\n      <div>\n        <ItemBtnEdit type=\"button\" disabled={isLoading} onClick={onClick}>\n          Edit\n        </ItemBtnEdit>\n        <ItemBtnDelete type=\"button\" disabled={isLoading} onClick={onClick}>\n          Delete\n        </ItemBtnDelete>\n      </div>\n    </ItemBlock>\n  );\n};\n\nContactItem.propTypes = {\n  contactItem: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListBlock = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-top: 15px;\n`;\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { ListBlock } from './ContactList.styled';\nimport { deleteContact } from '../../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../../redux/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const filterContact = () => {\n    if (contacts.length !== 0) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return [];\n  };\n\n  return (\n    <ListBlock>\n      {filterContact().map(contact => {\n        const { id } = contact;\n        return (\n          <ContactItem\n            key={id}\n            contactItem={contact}\n            onClick={() => dispatch(deleteContact(id))}\n          />\n        );\n      })}\n    </ListBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 30px auto;\n  padding: 0;\n`;\n\n\n\n\n","import { Filter } from './Filter/Filter';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList ';\nimport {ContactsTitle} from \"./Contacts.styled\"\nconst Contacts = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 24,\n        color: '#010101',\n      }}\n    >\n      <ContactsTitle>Phonebook</ContactsTitle>\n      <ContactForm />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["FilterTitle","styled","FilterInput","Filter","filter","useSelector","state","dispatch","useDispatch","type","name","pattern","title","required","onChange","event","filterContact","currentTarget","value","FormBlock","FormTitle","FormInput","FormBtn","ContactForm","useState","setName","phone","setPhone","contacts","handleChange","target","onSubmit","preventDefault","items","find","contact","alert","addContact","number","disabled","isLoading","ItemBlock","ItemBtnEdit","ItemBtnDelete","ContactItem","contactItem","onClick","ListBlock","ContactList","useEffect","fetchContacts","length","toLowerCase","includes","map","id","deleteContact","ContactsTitle","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}