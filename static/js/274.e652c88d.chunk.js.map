{"version":3,"file":"static/js/274.e652c88d.chunk.js","mappings":"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","sources":["components/Contacts/Filter/Filter.styled.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ContactForm/ContactForm.styled.jsx","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/ContactItem/ContactItem.styled.jsx","components/Contacts/ContactModal/ContactModal.styled.jsx","components/Contacts/ContactModal/ContactModal.jsx","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList .jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterTitle = styled.label`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nexport const FilterInput = styled.input`\n  margin-left: 20px;\n  height: 25px;\n  width: 20vw;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  background-color: rgba(255, 255, 255, 0.35);\n  :focus {\n    border: 1px solid #35e6d6;\n  }\n`;\n","import { FilterTitle, FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../../redux/filterSlice';\nimport { useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filterInput = event => {\n    dispatch(filterContact(event.currentTarget.value));\n  };\n\n  return (\n    <FilterTitle>\n      Search by name:\n      <FilterInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={filterInput}\n        value={filter}\n        placeholder=\"Name Surname\"\n      />\n    </FilterTitle>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormBlock = styled.form`\n  display: flex;\n  gap: 5px;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 30%;\n`;\n\nexport const FormTitle = styled.label`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n  height: 25px;\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  background-color: rgba(255, 255, 255, 0.35);\n  :focus {\n    border: 1px solid #35e6d6;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 10px;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  margin: 0 auto;\n  margin-top: 15px;\n  color: #35e6d6;\n  background-color: transparent;\n  cursor: pointer;\n  :hover {\n    color: black;\n    background-color: #35e6d6;\n  }\n`;\n","import { useState } from 'react';\nimport { FormBlock, FormTitle, FormInput, FormBtn } from './ContactForm.styled';\nimport { addContact } from '../../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(state => state.contacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setPhone(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts.items.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    }\n    dispatch(addContact({ name, number:phone }));\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <FormBlock onSubmit={handleSubmit}>\n      <FormTitle>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n          placeholder=\"my@mail.com\"\n        />\n      </FormTitle>\n      <FormTitle>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={phone}\n          placeholder=\"+38(050)123-45-67\"\n        />\n      </FormTitle>\n      <FormBtn type=\"submit\" disabled={contacts.isLoading}>\n        Add contact\n      </FormBtn>\n    </FormBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ItemBlock = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nexport const ItemBtnEdit = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 10px;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  color: #35e6d6;\n  background-color: transparent;\n  margin-right: 5px;\n  cursor: pointer;\n  :hover {\n    color: #0400ff;\n    border-color: #0400ff;\n    background-color: #35e6d6;\n  }\n`;\n\nexport const ItemBtnDelete = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 10px;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  color: #35e6d6;\n  background-color: transparent;\n  cursor: pointer;\n  :hover {\n    color: red;\n    border-color: red;\n    background-color: #35e6d6;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalWraper = styled.div`\n  align-items: center;\n  background: rgba(255, 255, 255, 0.7);\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n`;\n\n// export const Modal = styled.div`\n//   width: 30%;\n//   height: 500px;\n//   border: 1px solid #35e6d6;\n//   border-radius: 5px;\n//   background-color: #ffffff;\n// `;\n\nexport const Modal = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin: 0 auto;\n  padding: 10px;\n  width: 30%;\n  border: 1px solid #35e6d6;\n  border-radius: 5px;\n  background-color: #e48913;\n`;\n\nexport const ModalTitle = styled.label`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const ModalInput = styled.input`\n  margin-left: 20px;\n  height: 25px;\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  background-color: rgba(255, 255, 255, 0.35);\n  :focus {\n    border: 1px solid #35e6d6;\n  }\n`;\n\nexport const ModalBtn = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 10px;\n  border-radius: 5px;\n  border: 1px solid #35e6d6;\n  margin: 0 auto;\n  margin-top: 15px;\n  color: #35e6d6;\n  background-color: transparent;\n  cursor: pointer;\n  :hover {\n    color: black;\n    background-color: #35e6d6;\n  }\n`;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from '../../../redux/operations';\nimport {\n  ModalWraper,\n  Modal,\n  ModalTitle,\n  ModalInput,\n  ModalBtn,\n} from './ContactModal.styled';\n\nexport const ContactModal = ({ id, modalToggle }) => {\n  const contacts = useSelector(state => state.contacts.items);\n  const currentContact = contacts.find(contact => contact.id === id);\n  const [name, setName] = useState(`${currentContact.name}`);\n  const [number, setNumber] = useState(`${currentContact.number}`);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name === name && contact.number === number\n      )\n    ) {\n      return alert(`${name} is already in contacts!`);\n    }\n    dispatch(updateContact({id, name, number}));\n    setName('');\n    setNumber('');\n    modalToggle();\n  };\n\n  useEffect(() => {\n    const hendlePressEsc = event => {\n      if (event.code === 'Escape') {\n        modalToggle();\n      }\n    };\n\n    window.addEventListener('keydown', hendlePressEsc);\n    return () => {\n      window.removeEventListener('keydown', hendlePressEsc);\n    };\n    // Следующая строка нужна!!! что б вырубить ESLINT!!!!\n    // eslint-disable-next-line\n  }, []);\n\n  const hendleClickBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      modalToggle();\n    }\n  };\n\n  return (\n    <ModalWraper onClick={hendleClickBackdrop}>\n      <Modal onSubmit={handleSubmit}>\n        <ModalTitle>\n          Name\n          <ModalInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </ModalTitle>\n        <ModalTitle>\n          Number\n          <ModalInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </ModalTitle>\n        <ModalBtn type=\"submit\">Edit contact</ModalBtn>\n      </Modal>\n    </ModalWraper>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { ItemBlock, ItemBtnEdit, ItemBtnDelete } from './ContactItem.styled';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport {ContactModal} from \"../ContactModal/ContactModal\"\n\nexport const ContactItem = ({ contactItem, onClick }) => {\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  // const modal = useSelector(state => state.contacts.isLoading);\n  const [modal, setModal] = useState(false)\n  \n  const toggleModal = () => {\n    setModal(prevModal => !prevModal);\n  }\n  return (\n    <ItemBlock>\n      {contactItem.name}: {contactItem.number}\n      <div>\n        <ItemBtnEdit type=\"button\" disabled={isLoading} onClick={toggleModal}>\n          Edit\n        </ItemBtnEdit>\n        <ItemBtnDelete type=\"button\" disabled={isLoading} onClick={onClick}>\n          Delete\n        </ItemBtnDelete>\n        {modal && (\n          <ContactModal id={contactItem.id} modalToggle={toggleModal} />\n        )}\n      </div>\n    </ItemBlock>\n  );\n};\n\nContactItem.propTypes = {\n  contactItem: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListBlock = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-top: 15px;\n`;\n","import { ContactItem } from '../ContactItem/ContactItem';\nimport { ListBlock } from './ContactList.styled';\nimport { deleteContact } from '../../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../../redux/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const filterContact = () => {\n    if (contacts.length !== 0) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return [];\n  };\n \n  const apruveDelete = ({ id, name }) => {\n    const apruve = window.confirm(\n      `You want to delete the contact \"${name}\"! Are you sure?`\n    );\n    if (apruve) {\n      dispatch(deleteContact(id));\n    }\n  };\n\n  return (\n    <ListBlock>\n      {filterContact().map(contact => {\n        const { id } = contact;\n        \n        return (\n          <ContactItem\n            key={id}\n            contactItem={contact}\n            onClick={() => apruveDelete(contact)}\n          />\n        );\n      })}\n    </ListBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 30px auto;\n  padding: 0;\n`;\n\n\n\n\n","import { Filter } from './Filter/Filter';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList ';\nimport {ContactsTitle} from \"./Contacts.styled\"\nconst Contacts = () => {\n  \n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 24,\n        color: '#010101',\n      }}\n    >\n      <ContactsTitle>Phonebook</ContactsTitle>\n      <ContactForm />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["FilterTitle","styled","FilterInput","Filter","filter","useSelector","state","dispatch","useDispatch","type","name","pattern","title","required","onChange","event","filterContact","currentTarget","value","placeholder","FormBlock","FormTitle","FormInput","FormBtn","ContactForm","useState","setName","phone","setPhone","contacts","handleChange","target","onSubmit","preventDefault","items","find","contact","alert","addContact","number","disabled","isLoading","ItemBlock","ItemBtnEdit","ItemBtnDelete","ModalWraper","Modal","ModalTitle","ModalInput","ModalBtn","ContactModal","id","modalToggle","currentContact","setNumber","useEffect","hendlePressEsc","code","window","addEventListener","removeEventListener","onClick","updateContact","ContactItem","contactItem","modal","setModal","toggleModal","prevModal","ListBlock","ContactList","fetchContacts","length","toLowerCase","includes","map","confirm","deleteContact","apruveDelete","ContactsTitle","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}